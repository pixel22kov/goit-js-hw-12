{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst myApiKey = '49327575-d50cf96af4b1ede3148c0e758';\nconst pixabayUrl = 'https://pixabay.com/api/';\n\nexport const fetchImages = query =>\n  axios\n    .get(pixabayUrl, {\n      params: {\n        key: myApiKey,\n        q: query,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        safesearch: true,\n      },\n    })\n    .then(response => response.data.hits)\n    .catch(error => {\n      iziToast.error({\n        message:\n          'Sorry, there are no images matching your search query. Please try again!',\n        position: 'topRight',\n      });\n      console.error(error);\n    });","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst gallery = document.querySelector('.gallery');\nconst loader = document.querySelector('.loader');\n\nexport function showLoader() {\n  loader.classList.remove('visually-hidden');\n}\nexport function hideLoader() {\n  loader.classList.add('visually-hidden');\n}\n\nexport const cleanGallery = () => {\n  gallery.innerHTML = '';\n};\n\nexport const renderImages = images => {\n  const markup = images.map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) =>\n      `<li class=\"gallery-item\">\n        <a class=\"gallery-link\" href=\"${largeImageURL}\" alt=\"${tags}\">\n          <div class=\"photo-wrapper\">\n            <img src=\"${webformatURL}\" alt=\"${tags}\" />\n            <div class=\"info-wrapper\">\n              <div class=\"info-box\">\n                <h3 class=\"gallery-title\">Likes</h3>\n                <p class=\"gallery-text\">${likes}</p>\n              </div>\n              <div class=\"info-box\">\n                <h3 class=\"gallery-title\">Views</h3>\n                <p class=\"gallery-text\">${views}</p>\n              </div>\n              <div class=\"info-box\">\n                <h3 class=\"gallery-title\">Comments</h3>\n                <p class=\"gallery-text\">${comments}</p>\n              </div>\n              <div class=\"info-box\">\n                <h3 class=\"gallery-title\">Downloads</h3>\n                <p class=\"gallery-text\">${downloads}</p>\n              </div>\n            </div>\n          </div>\n        </a>\n      </li>`\n    )\n    .join('');\n\n  gallery.insertAdjacentHTML('beforeend', markup);\n\n  const lightbox = new SimpleLightbox('.gallery a', {\n    captionsData: 'alt', \n    captionDelay: 250, \n  });\n  lightbox.refresh();\n};","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nimport { fetchImages } from './js/pixabay-api.js';\nimport { renderImages, cleanGallery, showLoader, hideLoader } from './js/render-functions.js';\n\n\nconst form = document.querySelector('.form');\nconst input = document.querySelector('.form-input');\n\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n\n  const query = input.value.trim();\n\n  if (!query) {\n    iziToast.warning({\n      message: 'Please enter a valid search query!',\n      position: 'topRight',\n    });\n    return;\n  }\n\n  cleanGallery();\n  showLoader();\n\n  fetchImages(query)\n    .then(images => {\n   if (images.length === 0) {\n     iziToast.error({\n       message: 'Sorry, there are no images matching your search query. Please try again!',\n       position: 'topRight',\n     });\n     form.reset();\n     return;\n   }\n\n    renderImages(images);\n    form.reset();\n    })\n    .catch(error => {\n    iziToast.error({\n     message: 'An error occurred while fetching images. Please try again later.',\n     position: 'topRight',\n    });\n    console.error(error);\n  })\n    .finally(() => {\n      hideLoader(); \n  });\n});"],"names":["myApiKey","pixabayUrl","fetchImages","query","axios","response","error","iziToast","gallery","loader","showLoader","hideLoader","cleanGallery","renderImages","images","markup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","SimpleLightbox","form","input","event"],"mappings":"owBAKA,MAAMA,EAAW,qCACXC,EAAa,2BAENC,EAAcC,GACzBC,EACG,IAAIH,EAAY,CACf,OAAQ,CACN,IAAKD,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EACb,CACP,CAAK,EACA,KAAKE,GAAYA,EAAS,KAAK,IAAI,EACnC,MAAMC,GAAS,CACdC,EAAS,MAAM,CACb,QACE,2EACF,SAAU,UAClB,CAAO,EACD,QAAQ,MAAMD,CAAK,CACzB,CAAK,ECxBCE,EAAU,SAAS,cAAc,UAAU,EAC3CC,EAAS,SAAS,cAAc,SAAS,EAExC,SAASC,GAAa,CAC3BD,EAAO,UAAU,OAAO,iBAAiB,CAC3C,CACO,SAASE,GAAa,CAC3BF,EAAO,UAAU,IAAI,iBAAiB,CACxC,CAEO,MAAMG,EAAe,IAAM,CAChCJ,EAAQ,UAAY,EACtB,EAEaK,EAAeC,GAAU,CACpC,MAAMC,EAASD,EAAO,IAClB,CAAC,CACC,aAAAE,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACD,IACD;AAAA,wCACkCL,CAAa,UAAUC,CAAI;AAAA;AAAA,wBAE3CF,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA;AAAA,0CAIRC,CAAK;AAAA;AAAA;AAAA;AAAA,0CAILC,CAAK;AAAA;AAAA;AAAA;AAAA,0CAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,0CAIRC,CAAS;AAAA;AAAA;AAAA;AAAA;AAAA,YAM9C,EACA,KAAK,EAAE,EAEVd,EAAQ,mBAAmB,YAAaO,CAAM,EAE7B,IAAIQ,EAAe,aAAc,CAChD,aAAc,MACd,aAAc,GAClB,CAAG,EACQ,QAAO,CAClB,ECxDMC,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAQ,SAAS,cAAc,aAAa,EAGlDD,EAAK,iBAAiB,SAAUE,GAAS,CACvCA,EAAM,eAAc,EAEpB,MAAMvB,EAAQsB,EAAM,MAAM,KAAI,EAE9B,GAAI,CAACtB,EAAO,CACVI,EAAS,QAAQ,CACf,QAAS,qCACT,SAAU,UAChB,CAAK,EACD,MACD,CAEDK,IACAF,IAEAR,EAAYC,CAAK,EACd,KAAKW,GAAU,CACjB,GAAIA,EAAO,SAAW,EAAG,CACvBP,EAAS,MAAM,CACb,QAAS,2EACT,SAAU,UACjB,CAAM,EACDiB,EAAK,MAAK,EACV,MACD,CAEAX,EAAaC,CAAM,EACnBU,EAAK,MAAK,CACd,CAAK,EACA,MAAMlB,GAAS,CAChBC,EAAS,MAAM,CACd,QAAS,mEACT,SAAU,UACf,CAAK,EACD,QAAQ,MAAMD,CAAK,CACvB,CAAG,EACE,QAAQ,IAAM,CACbK,GACN,CAAG,CACH,CAAC"}